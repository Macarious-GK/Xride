# Generated by Django 5.1.1 on 2025-01-28 12:14

import django.db.models.deletion
import ride_V3.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ride_V3', '0006_remove_car_car_model_remove_car_location_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(help_text='e.g., Tesla Model 3, Ford Focus', max_length=255, unique=True)),
                ('manufacturer', models.CharField(max_length=255)),
                ('year', models.PositiveIntegerField()),
                ('engine_type', models.CharField(choices=[('electric', 'Electric'), ('diesel', 'Diesel')], default='diesel', max_length=50)),
                ('seating_capacity', models.IntegerField()),
                ('additional_features', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ThirdPartyMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('maintenance_type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_plate', models.CharField(max_length=20, unique=True)),
                ('door_status', models.CharField(choices=[('locked', 'Locked'), ('unlocked', 'Unlocked')], default='locked', max_length=10)),
                ('temperature', models.FloatField()),
                ('location_latitude', models.FloatField()),
                ('location_longitude', models.FloatField()),
                ('reservation_status', models.CharField(choices=[('reserved', 'Reserved'), ('maintenance', 'Maintenance'), ('available', 'Available')], default='available', max_length=12)),
                ('booking_price_2H', models.DecimalField(decimal_places=2, max_digits=8)),
                ('booking_price_6H', models.DecimalField(decimal_places=2, max_digits=8)),
                ('booking_price_12H', models.DecimalField(decimal_places=2, max_digits=8)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ride_V3.location')),
                ('car_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ride_V3.carmodel')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('reservation_plan', models.CharField(choices=[('2H', '2 Hours'), ('6H', '6 Hours'), ('12H', '12 Hours')], max_length=3)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='active', max_length=10)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ride_V3.car')),
                ('reservation_Locatiion_Source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ride_V3.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='ReservationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation_ID', models.IntegerField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('reservation_plan', models.CharField(choices=[('2H', '2 Hours'), ('6H', '6 Hours'), ('12H', '12 Hours')], max_length=3)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('cancelled', 'Cancelled')], default='completed', max_length=10)),
                ('duration', models.FloatField()),
                ('review_rate', models.PositiveIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], help_text='Review rate from 1 to 5', null=True)),
                ('review_text', models.TextField(blank=True, help_text='Review text about the park', null=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ride_V3.car')),
                ('reservation_Locatiion_Distnation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destination_reservations', to='ride_V3.location')),
                ('reservation_Locatiion_Source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_reservations', to='ride_V3.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='Fine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('paid', 'Paid'), ('pending', 'Pending'), ('unpaid', 'Unpaid')], default='pending', max_length=20)),
                ('violation_copy', models.ImageField(blank=True, null=True, upload_to=ride_V3.models.violation_photo_upload_path)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ride_V3.car')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ride_V3.reservationhistory')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(choices=[('oil_change', 'Oil Change'), ('clean', 'Clean'), ('tire_rotation', 'Tire Rotation'), ('tire_replacement', 'Tire Replacement'), ('brake_inspection', 'Brake Inspection'), ('battery_replacement', 'Battery Replacement'), ('engine_tuning', 'Engine Tuning'), ('fluid_check', 'Fluid Check'), ('filter_change', 'Filter Change'), ('suspension_inspection', 'Suspension Inspection'), ('alignment', 'Alignment'), ('ac_service', 'A/C Service'), ('lights_check', 'Lights Check'), ('general_inspection', 'General Inspection'), ('other', 'Other')], help_text='Type of maintenance, e.g., oil change, tire rotation', max_length=50)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('performed_at', models.DateTimeField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ride_V3.car')),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ride_V3.thirdpartymaintenance')),
            ],
        ),
    ]
